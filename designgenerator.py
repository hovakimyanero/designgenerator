import streamlit as st
import random
import requests
from randomcolor import RandomColor
import colorsys

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±–∏–∑–Ω–µ—Å-–∏–¥–µ–π
business_ideas = [
    "–û–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞ –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤",
    "–°–µ—Ä–≤–∏—Å –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –µ–¥—ã –¥–ª—è –≤–µ–≥–∞–Ω–æ–≤",
    "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π",
    "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤",
    "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é",
    "–§–∏—Ç–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å AI-—Ç—Ä–µ–Ω–µ—Ä–æ–º",
    "VR-–≥–∞–ª–µ—Ä–µ—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞",
    "–°–∞–π—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã",
    "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏",
    "–û–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π",
    "–°—Ç–∞—Ä—Ç–∞–ø –ø–æ –ø—Ä–æ–¥–∞–∂–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Ñ—É—Ç–±–æ–ª–æ–∫",
    "–°–µ—Ä–≤–∏—Å –ø–æ –ø–æ–¥–±–æ—Ä—É –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ –¥–ª—è –¥–æ–º–∞",
    "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤",
    "–ö–ª—É–± –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ä–µ–¥–∫–∏–µ –∫–Ω–∏–≥–∏",
    "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä NFT-–∫–æ–ª–ª–µ–∫—Ü–∏–π",
    "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —É—á–µ–±–Ω–∏–∫ –ø–æ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏–∏",
    "–°–∞–π—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º",
    "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤",
    "–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä–æ–≤",
    "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
    "AI-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –º–æ–¥–µ",
    "–ö—É—Ä—Å –ø–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤",
    "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏",
    "–°–∞–π—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç –¢–∞—Ä–æ",
    "–û–±–ª–∞—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤"
]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤
def generate_harmonious_palette(base_color):
    base_hue = colorsys.rgb_to_hsv(*base_color)[0]  # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—Ç–µ–Ω–æ–∫ (hue) –∏–∑ RGB
    harmonious_palette = []

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–æ—Ä–∏–∏ –≥–∞—Ä–º–æ–Ω–∏–∏
    for i in range(5):
        hue = (base_hue + i * 0.1) % 1  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤ (—Å–¥–≤–∏–≥ hue)
        rgb = colorsys.hsv_to_rgb(hue, 0.8, 0.8)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ RGB
        harmonious_palette.append(rgb)
    return harmonious_palette

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –∏ –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤
def generate_palette():
    rand_color = RandomColor()
    base_color = rand_color.generate(count=1)[0]
    base_rgb = [int(base_color[1:3], 16) / 255, int(base_color[3:5], 16) / 255, int(base_color[5:7], 16) / 255]
    return generate_harmonious_palette(base_rgb)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–ª–∏—Ç—Ä—ã —Å Coolors API
def get_color_palette():
    try:
        response = requests.get("https://www.colr.org/json/colors/random/5")
        data = response.json()
        colors = [f"#{c['hex']}" for c in data["colors"] if c["hex"]]
        return colors if colors else generate_palette()
    except:
        return generate_palette()

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è
def generate_name():
    prefixes = ["Neo", "Tech", "Smart", "Vision", "Future", "Next", "Cloud", "AI", "Design", "Creative"]
    suffixes = ["Lab", "Hub", "Soft", "Studio", "Pro", "AI", "Space", "Works", "Forge", "Base"]
    return f"{random.choice(prefixes)} {random.choice(suffixes)}"

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("üé® –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π –¥–ª—è –¥–∏–∑–∞–π–Ω–∞")

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Å –∏–∑–º–µ–Ω—ë–Ω–Ω–æ–π –æ–±–≤–æ–¥–∫–æ–π –∏ —Ü–≤–µ—Ç–æ–º —Ç–µ–∫—Å—Ç–∞
st.markdown("""
    <style>
        .stButton>button {
            border: 2px solid #ADD8E6;
            color: #ADD8E6;
            background-color: transparent;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        .stButton>button:hover {
            border-color: #87CEEB;
            color: #87CEEB;
        }
        .stButton>button:focus {
            border-color: #ADD8E6;
            color: #ADD8E6;
        }
        
        .hover-box {
            width: 180px;
            height: 180px;
            border-radius: 18px;
            transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
            box-shadow: 8px 8px 12px rgba(0, 0, 0, 0.15), -8px -8px 12px rgba(255, 255, 255, 0.7);
        }
        
        .hover-box:hover {
            transform: translateY(-20px);
            box-shadow: 8px 8px 12px rgba(0, 0, 0, 0.3), -8px -8px 12px rgba(255, 255, 255, 0.3);
        }
    </style>
""", unsafe_allow_html=True)

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
if st.button("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –∏–¥–µ—é"):
    idea = random.choice(business_ideas)
    name = generate_name()
    palette = get_color_palette()
    font = random.choice(["Roboto", "Montserrat", "Lato", "Open Sans", "Poppins"])

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    st.subheader("üìå –ò–¥–µ—è –ø—Ä–æ–µ–∫—Ç–∞:")
    st.write(f"{idea}")

    st.subheader("üè∑ –ù–∞–∑–≤–∞–Ω–∏–µ:")
    st.write(f"{name}")

    st.subheader("üé® –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞:")
    cols = st.columns(len(palette))
    for i, color in enumerate(palette):
        hex_color = '#{:02x}{:02x}{:02x}'.format(int(color[0]*255), int(color[1]*255), int(color[2]*255))
        cols[i].markdown(f'''
            <div class="hover-box" style="background-color: {hex_color};"></div>
        ''', unsafe_allow_html=True)
        cols[i].write(hex_color)

    st.subheader("üî† –®—Ä–∏—Ñ—Ç:")
    st.write(f"{font}")
    st.markdown(f'<p style="font-family: {font}; font-size: 24px;">–ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ —ç—Ç–∏–º —à—Ä–∏—Ñ—Ç–æ–º</p>', unsafe_allow_html=True)